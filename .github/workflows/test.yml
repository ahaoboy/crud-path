name: Test

permissions:
  contents: write

on: [push]

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  rust-test:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: cargo run
        run: |
          cargo run
      - name: get
        run: |
          cargo run
          cargo run -- get
      - name: shell
        run: |
          cargo run -- shell
      - name: add path
        run: |
          cargo run -- add /a/b/c
          cargo run -- add c:/b/c
      - name: bashrc
        run: |
          echo ~/.bashrc
          bash --version
          cat ~/.bashrc
      - name: get path
        run: |
          source ~/.bashrc
          echo $GITHUB_ENV
          export PATH="$PATH:/test/path"
          cargo run -- get
      - name: has path
        run: |
          source ~/.bashrc
          cargo run -- has /a/b/c
          cargo run -- has "c:/b/c"
          cargo run -- has "C:\Windows"
          cargo run -- has /bin
          cargo run -- has /usr/bin
      - name: github path
        run: |
          cargo run -- is_github
          cargo run -- add_github_path /x/y
          cargo run -- add_github_path c:/x/y
      - name: test github path
        run: |
          cargo run -- has /x/y
          cargo run -- has c:/x/y

      - name: bun install -g
        run: |
          bun i -g quickjs-emscripten-cli
      - name: test bun
        run: |
          which quickjs-emscripten-cli

  js-test:
    strategy:
      matrix:
        os: [ubuntu-24.04, windows-latest, macos-14, macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - name: build
        run: |
          pnpm install
          pnpm run build
      - name: shell
        run: |
          node bundle/cli.js shell
      - name: add path
        run: |
          node bundle/cli.js add /a/b/c
          node bundle/cli.js add c:/b/c
      - name: bashrc
        run: |
          bash --version
          echo ~/.bashrc
          cat ~/.bashrc
      - name: get path
        run: |
          source ~/.bashrc
          export PATH="$PATH:/test/path"
          node -e "console.log(process.env.PATH)"
          node -e "console.log(process.env.BASH_ENV)"
          echo $GITHUB_ENV
          node bundle/cli.js get
      - name: has path
        run: |
          source ~/.bashrc
          node bundle/cli.js has /a/b/c
          node bundle/cli.js has "c:/b/c"
          node bundle/cli.js has "C:\Windows"
          node bundle/cli.js has /bin
          node bundle/cli.js has /usr/bin
      - name: github path
        run: |
          node bundle/cli.js is_github
          node bundle/cli.js add_github_path /x/y
          node bundle/cli.js add_github_path c:/x/y
      - name: test github path
        run: |
          node bundle/cli.js has /x/y
          node bundle/cli.js has c:/x/y
